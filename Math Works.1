import java.awt.BorderLayout;
import java.awt.Container;
import java.awt.Graphics;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.util.ArrayList;
import java.util.Scanner;

import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
class MakeBill {
	private double billTotal;
	private double amountPaid;
	private double percentPaid;
	private double payment;
	private double totalRemaining;
	private String billName;
	
	public double getBillTotal() {
		return billTotal;
	}
	public double getAmountPaid() {
		return amountPaid;
	}
	public double getPercentPaid() {
		return percentPaid;
	}
	public double getPayment() {
		return payment;
	}
	public double getTotalRemaining() {
		return totalRemaining;
	}
	public String getBillName() {
		return billName;
	}
	public void setBillTotal(double billTotal) {
		this.billTotal = billTotal;
	}
	public void setAmountPaid(double amountPaid) {
		this.amountPaid = amountPaid;
		setPercentPaid();
		setTotalRemaining();
	}
	private void setPercentPaid() {
		percentPaid = (amountPaid/billTotal) *100;
	}
	public void setPayment(double payment) {
		this.payment = payment;
	}
	private void setTotalRemaining() {
		totalRemaining = billTotal - amountPaid;
	}
	public void setBillName(String billName) {
		this.billName = billName;
	}
	@Override
	public String toString() {
		return String.format("%s costs %.2f, paid %.2f, remaining %.2f",billName,billTotal,amountPaid,totalRemaining);
	}
}

class BillPanel extends JPanel {	
	public void paintComponent(Graphics g) {
		super.paintComponent(g);
		
	}
}
class SavingBill {
	public boolean saveBillsText() {
		try {// as text
			
			return saveBillsText();
		}catch (Exception ex) {
			return false;
		}
	}
		public boolean saveBillsJSON() {
			try {
				
				return saveBillsJSON();
			}catch(Exception ex) {
				return false;
			}
		}
		public boolean saveBillsXML() {
			try{
				
				return saveBillsXML();
			}catch(Exception ex) {
				return false;
			}
		}
		public boolean loadBills(File f) {
			try{
				
				return true;
			}catch(Exception ex){
				return false;
			}
		}
}

class Frame extends JFrame {
	public ArrayList<MakeBill> makeBill;
	Scanner scan;
	MakeBill bill = new MakeBill();
	
	public void setupMenu() {
		JMenuBar menu = new JMenuBar();
		JMenu file = new JMenu("File");
		JMenu savemnu = new JMenu("Save");
		JMenuItem fopen = new JMenuItem("Open");
		JMenuItem save1 = new JMenuItem("Save as Text"); 
		JMenuItem save2 = new JMenuItem("Save as JSON");
		JMenuItem save3 = new JMenuItem("Save as XML");	
		makeBill = new ArrayList<MakeBill>();
		
		fopen.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				JOptionPane.showMessageDialog(null, "You've pressed the Open button!"); 
				//Optional addition, address this last if you have time, if not, comment out/remove
				JFileChooser jfc = new JFileChooser();
				if(jfc.showOpenDialog(null) ==JFileChooser.APPROVE_OPTION){
					SavingBill sb = new SavingBill();
					//if(sb.loadBills(billName, jfc.getSelectedFile())) {
					//	JOptionPane.showMessageDialog(null, "Points were read from file");
					//}
				}
			}
		});
		file.add(fopen);
		
		save1.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				JOptionPane.showMessageDialog(null, "You've pressed the save button!"); 
				//Text save
			}
		});
		savemnu.add(save1);
		
		save2.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				JOptionPane.showMessageDialog(null, "You've pressed the save2 button!"); 
				//JSON Save
			}
		});	
		savemnu.add(save2);
		
		save3.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				JOptionPane.showMessageDialog(null, "You've pressed the save3 button!"); 
				//XML Save
			}
		});
		savemnu.add(save3);
		
		JMenuItem fexit = new JMenuItem("Exit"); //the serialization
		fexit.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				System.exit(0);
			}
		});
		file.add(savemnu);
		file.add(fexit);
		menu.add(file);
		setJMenuBar(menu);
	}
	public void setupScreen() {
		setBounds(100,100,500,500);
		setDefaultCloseOperation(EXIT_ON_CLOSE);
		setTitle("Bill Plan Application");
		Container c = getContentPane();
		c.setLayout(new BorderLayout());
		
		JPanel pannorth = new JPanel();
		pannorth.setLayout(new GridLayout());
		JPanel pnLeft = new JPanel();
		JPanel pnMid = new JPanel();
		JPanel pnRight = new JPanel();
		pannorth.add(pnLeft);
		pannorth.add(pnMid);
		pannorth.add(pnRight);
		
		JButton btnAdd = new JButton("+ Add Bill");
		btnAdd.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				String billName = JOptionPane.showInputDialog(null,"What is the name of this bill");
				String bt = JOptionPane.showInputDialog(null,"What is the total cost?");
				double billTotal = Double.parseDouble(bt);
				MakeBill newBill = new MakeBill();
				newBill.setBillName(billName);
				newBill.setBillTotal(billTotal);
				makeBill.add(newBill);
			}
		});
		
		JPanel panmiddle = new JPanel();
		panmiddle.setLayout(new GridLayout(1,2));
		
		JPanel pmn = new JPanel();
		pmn.setLayout(new GridLayout(1,5));
		
		JPanel pmn1 = new JPanel();
		JPanel pmn2 = new JPanel();
		JPanel pmn3 = new JPanel();
		JPanel pmn4 = new JPanel();
		JPanel pmn5 = new JPanel();
		
		JLabel pmnleft1 = new JLabel("Name");
		JLabel pmnleft2 = new JLabel("Amount");
		JLabel pmnmid = new JLabel("Amount Paid");
		JLabel pmnright1 = new JLabel("Percent Paid");
		JLabel pmnright2 = new JLabel("Total Remaining");
		
		pmn1.add(pmnleft1);
		pmn2.add(pmnleft2);
		pmn3.add(pmnmid);
		pmn4.add(pmnright1);
		pmn5.add(pmnright2);
		
		panmiddle.add(pmn1);
		panmiddle.add(pmn2);
		panmiddle.add(pmn3);
		panmiddle.add(pmn4);
		panmiddle.add(pmn5);
		
		JPanel pms = new JPanel();
		pms.setLayout(new BorderLayout());
		
		JPanel pansouth = new JPanel();
		pansouth.setLayout(new GridLayout(1,3));
		JPanel psLeft = new JPanel();
		JPanel psMid = new JPanel();
		JPanel psRight = new JPanel();
		pansouth.add(psLeft);
		pansouth.add(psMid);
		pansouth.add(psRight);
		
		JButton btnPay = new JButton("Pay");
		btnPay.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				String paidTotal = JOptionPane.showInputDialog(null,"How much are you paying today?");
				double payment = Double.parseDouble(paidTotal);
				bill.setAmountPaid(payment);
				for(int i = 0; i<makeBill.size(); i++) {
					System.out.print(makeBill.get(i).getBillName()+ " ");
					System.out.println(makeBill.get(i).getBillTotal());
				}
				payBills.pay(makeBill,payment);
				for(int i = 0; i<makeBill.size(); i++) {
					System.out.println(makeBill.get(i).toString());
				}
			}
		});
		
		panmiddle.add(pmn);
		panmiddle.add(pms);
		pnLeft.add(btnAdd);
		psMid.add(btnPay);
		
		c.add(pannorth, BorderLayout.NORTH);
		c.add(panmiddle, BorderLayout.CENTER);
		c.add(pansouth, BorderLayout.SOUTH);
		
		setupMenu();
	}
	public Frame() {
		setupScreen();
	}
}
public class Bill {
	public static void main(String[] args) {
		Frame frame = new Frame();
		frame.setSize(650,600);
		frame.setVisible(true);
		
	}
	
}
